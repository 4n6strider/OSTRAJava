/* Generated By:JavaCC: Do not edit this line. OSTRAJavaParserTreeConstants.java Version 6.0_1 */
package cz.cvut.fit.ostrajava.Parser;

public interface OSTRAJavaParserTreeConstants
{
  public int JJTCOMPILATIONUNIT = 0;
  public int JJTVOID = 1;
  public int JJTCLASS = 2;
  public int JJTMETHODDECLARATIONLOOKAHEAD = 3;
  public int JJTFIELDDECLARATION = 4;
  public int JJTVARIABLEDECLARATOR = 5;
  public int JJTVARIABLE = 6;
  public int JJTVARIABLEINITIALIZER = 7;
  public int JJTMETHODDECLARATION = 8;
  public int JJTMETHOD = 9;
  public int JJTFORMALPARAMETERS = 10;
  public int JJTFORMALPARAMETER = 11;
  public int JJTCONSTRUCTORDECLARATION = 12;
  public int JJTEXPLICITCONSTRUCTORINVOCATION = 13;
  public int JJTTYPE = 14;
  public int JJTBOOL = 15;
  public int JJTSTRING = 16;
  public int JJTNUMBER = 17;
  public int JJTFLOAT = 18;
  public int JJTRESULTTYPE = 19;
  public int JJTNAME = 20;
  public int JJTNAMELIST = 21;
  public int JJTEXPRESSION = 22;
  public int JJTASSIGNMENT = 23;
  public int JJTCONDITIONALEXPRESSION = 24;
  public int JJTCONDITIONALOREXPRESSION = 25;
  public int JJTCONDITIONALANDEXPRESSION = 26;
  public int JJTEQUALITYEXPRESSION = 27;
  public int JJTINSTANCEOFEXPRESSION = 28;
  public int JJTRELATIONALEXPRESSION = 29;
  public int JJTADDITIVEEXPRESSION = 30;
  public int JJTMULTIPLICATIVEEXPRESSION = 31;
  public int JJTUNARYEXPRESSION = 32;
  public int JJTUNARYEXPRESSIONNOTPLUSMINUS = 33;
  public int JJTPRIMARYEXPRESSION = 34;
  public int JJTPRIMARYPREFIX = 35;
  public int JJTPRIMARYSUFFIX = 36;
  public int JJTNUMBERLITERAL = 37;
  public int JJTFLOATLITERAL = 38;
  public int JJTSTRINGLITERAL = 39;
  public int JJTBOOLEANLITERAL = 40;
  public int JJTNULLLITERAL = 41;
  public int JJTARGUMENTS = 42;
  public int JJTARGUMENTLIST = 43;
  public int JJTALLOCATIONEXPRESSION = 44;
  public int JJTARRAYDIMENSIONS = 45;
  public int JJTSTATEMENT = 46;
  public int JJTBLOCK = 47;
  public int JJTLOCALVARIABLEDECLARATION = 48;
  public int JJTEMPTYSTATEMENT = 49;
  public int JJTSTATEMENTEXPRESSION = 50;
  public int JJTSWITCHSTATEMENT = 51;
  public int JJTSWITCHLABEL = 52;
  public int JJTIFSTATEMENT = 53;
  public int JJTWHILESTATEMENT = 54;
  public int JJTDOSTATEMENT = 55;
  public int JJTFORSTATEMENT = 56;
  public int JJTFORINIT = 57;
  public int JJTSTATEMENTEXPRESSIONLIST = 58;
  public int JJTFORUPDATE = 59;
  public int JJTBREAKSTATEMENT = 60;
  public int JJTCONTINUESTATEMENT = 61;
  public int JJTRETURNSTATEMENT = 62;
  public int JJTTHROWSTATEMENT = 63;
  public int JJTTRYSTATEMENT = 64;
  public int JJTPRINTSTATEMENT = 65;


  public String[] jjtNodeName = {
    "CompilationUnit",
    "void",
    "Class",
    "MethodDeclarationLookahead",
    "FieldDeclaration",
    "VariableDeclarator",
    "Variable",
    "VariableInitializer",
    "MethodDeclaration",
    "Method",
    "FormalParameters",
    "FormalParameter",
    "ConstructorDeclaration",
    "ExplicitConstructorInvocation",
    "Type",
    "Bool",
    "String",
    "Number",
    "Float",
    "ResultType",
    "Name",
    "NameList",
    "Expression",
    "Assignment",
    "ConditionalExpression",
    "ConditionalOrExpression",
    "ConditionalAndExpression",
    "EqualityExpression",
    "InstanceOfExpression",
    "RelationalExpression",
    "AdditiveExpression",
    "MultiplicativeExpression",
    "UnaryExpression",
    "UnaryExpressionNotPlusMinus",
    "PrimaryExpression",
    "PrimaryPrefix",
    "PrimarySuffix",
    "NumberLiteral",
    "FloatLiteral",
    "StringLiteral",
    "BooleanLiteral",
    "NullLiteral",
    "Arguments",
    "ArgumentList",
    "AllocationExpression",
    "ArrayDimensions",
    "Statement",
    "Block",
    "LocalVariableDeclaration",
    "EmptyStatement",
    "StatementExpression",
    "SwitchStatement",
    "SwitchLabel",
    "IfStatement",
    "WhileStatement",
    "DoStatement",
    "ForStatement",
    "ForInit",
    "StatementExpressionList",
    "ForUpdate",
    "BreakStatement",
    "ContinueStatement",
    "ReturnStatement",
    "ThrowStatement",
    "TryStatement",
    "PrintStatement",
  };
}
/* JavaCC - OriginalChecksum=b2b921a57c8d3edfd86ea7615e958de0 (do not edit this line) */
